"use strict";angular.module("myApp").service("gameLogic",function(){function a(a,b){return angular.equals(a,b)}function b(a){return angular.copy(a)}function c(a){var b;for(b in a[0])if(a[0].hasOwnProperty(b)&&0===a[0][b][0])return"0";for(b in a[1])if(a[1].hasOwnProperty(b)&&7===a[1][b][0])return"1";return""}function d(a,b,c){var d,f,g=[],i=a.pieces,j=a.board,k=i[c][b][0],l=i[c][b][1];if(h(j,i,c,b))return[{setTurn:{turnIndex:1-c}},{set:{key:"pieces",value:i}},{set:{key:"board",value:j}},{set:{key:"delta",value:{color:b,row:k,col:l}}}];for(var m=!0,n=!0,o=!0,p=0;m||n||o;){if(0===c?p-=1:p+=1,m){d=k+p,f=l+p;try{g.push(e(a,d,f,b,c))}catch(q){m=!1}}if(n){d=k+p,f=l;try{g.push(e(a,d,f,b,c))}catch(q){n=!1}}if(o){d=k+p,f=l-p;try{g.push(e(a,d,f,b,c))}catch(q){o=!1}}}var r=g[Math.floor(Math.random()*g.length)];return r}function e(a,d,e,i,j){var k=a.pieces;void 0===k&&(k=[{BR:[7,0],GR:[7,1],RE:[7,2],YE:[7,3],PI:[7,4],PU:[7,5],BL:[7,6],OR:[7,7]},{OR:[0,0],BL:[0,1],PU:[0,2],PI:[0,3],YE:[0,4],RE:[0,5],GR:[0,6],BR:[0,7]}]);var l=a.board;void 0===l&&(l=[["T","T","T","T","T","T","T","T"],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["","","","","","","",""],["T","T","T","T","T","T","T","T"]]);var n,o=a.delta,p=k[j][i],q=p[0],r=p[1];if(n=void 0===o?i:m[o.row][o.col],h(l,k,j,n)){if(d===q&&e===r&&i===n)return[{setTurn:{turnIndex:1-j}},{set:{key:"pieces",value:k}},{set:{key:"board",value:l}},{set:{key:"delta",value:{color:i,row:d,col:e}}}];throw new Error("State changed while there is no legal move")}if(i!==n)throw new Error("Must move the piece that has the same color with the grid on which the opponent stoped last round!");var s=d-q,t=e-r;if(!f(j,s,t))throw new Error("One can only move a piece straight forward or diagonally forward!");if(g(l,d,e,q,r))throw new Error("It is not allowed to move a piece over another piece");var u,v,w=b(l),x=b(k);return w[q][r]="",w[d][e]="T",x[j][i]=[d,e],u=c(x),v=""!==u?{endMatch:{endMatchScores:"0"===u?[1,0]:[0,1]}}:{setTurn:{turnIndex:1-j}},[v,{set:{key:"pieces",value:x}},{set:{key:"board",value:w}},{set:{key:"delta",value:{color:i,row:d,col:e}}}]}function f(a,b,c){return 0===a?b>=0?!1:0===c||c===b||c===-b?!0:!1:1===a?0>=b?!1:0===c||c===b||c===-b?!0:!1:void 0}function g(a,b,c,d,e){var f;if(c===e){if(b>d){for(f=d+1;b>=f;f+=1)if(""!==a[f][c])return!0}else for(f=d-1;f>=b;f-=1)if(""!==a[f][c])return!0}else if(b>d)for(f=1;b-d>=f;f+=1){if(c>e&&""!==a[d+f][e+f])return!0;if(e>c&&""!==a[d+f][e-f])return!0}else if(d>b)for(f=1;d-b>=f;f+=1){if(c>e&&""!==a[d-f][e+f])return!0;if(e>c&&""!==a[d-f][e-f])return!0}return!1}function h(a,b,c,d){var e,f=b[c][d],g=f[0],h=f[1];return e=0===c?-1:1,g+=e,""!==a[g][h-1]&&""!==a[g][h]&&""!==a[g][h+1]?!0:void 0}function i(b){var c=b.move,d=b.turnIndexBeforeMove,f=b.stateBeforeMove;try{var g=c[3].set.value,h=g.color,i=g.row,j=g.col;if(i>7||0>i||j>7||0>j)return!1;var k=e(f,i,j,h,d);if(!a(c,k))return!1}catch(l){return!1}return!0}function j(a,b,c){for(var d=[],f=b,g=a,h=0;h<c.length;h+=1){var i=c[h],j=i.row,k=i.col,l=i.color,m=e(f,j,k,l,g);d.push({stateBeforeMove:f,turnIndexBeforeMove:g,move:m,comment:{en:i.comment}}),f={pieces:m[1].set.value,board:m[2].set.value,delta:m[3].set.value},g=1-g}return d}function k(){return[j(0,{pieces:[{BR:[4,0],GR:[7,1],RE:[2,7],YE:[1,3],PI:[3,4],PU:[7,5],BL:[2,1],OR:[3,6]},{OR:[0,0],BL:[1,1],PU:[0,2],PI:[4,1],YE:[3,7],RE:[1,6],GR:[6,6],BR:[2,5]}],board:[["T","","T","","","","",""],["","T","","T","","","T",""],["","T","","","","T","","T"],["","","","","T","","T","T"],["T","T","","","","","",""],["","","","","","","",""],["","","","","","","T",""],["","T","","","","T","",""]],delta:{color:"RE",row:1,col:6}},[{color:"BR",row:1,col:0,comment:"player0 moves BROWN piece to [1, 0] which is a red grid, the opponent has only 1 choice"},{color:"RE",row:2,col:6,comment:"player1 has to move RED piece and the only legal move is [2, 6] which is a YELLOW grid and this will lead to a win of player0"},{color:"YE",row:0,col:3,comment:"player0 moves YELLOW piece to [0, 3], which reaches player1's side, so player0 win"}]),j(1,{pieces:[{BR:[1,0],GR:[3,5],RE:[4,5],YE:[7,3],PI:[4,7],PU:[7,5],BL:[1,6],OR:[2,4]},{OR:[2,2],BL:[6,1],PU:[1,2],PI:[0,3],YE:[0,4],RE:[5,0],GR:[3,3],BR:[5,7]}],board:[["","","","T","T","","",""],["T","","T","","","","T",""],["","","T","","T","","",""],["","","","T","","T","",""],["","","","","","T","","T"],["T","","","","","","","T"],["","T","","","","","",""],["","","","T","","T","",""]],delta:{color:"PI",row:4,col:7}},[{color:"PI",row:2,col:3,comment:"player1 moves PINK piece to [2, 6] and this gives player0 only 1 choice for RED"},{color:"RE",row:3,col:4,comment:"player0 has to move RED piece and the only possible move is [3, 4], but this will lead to a win of player1"},{color:"BR",row:7,col:7,comment:"player1 moves the BROWN piece to [7, 7] and win the game"}])]}function l(){return j(0,{},[{color:"RE",row:3,col:2,comment:"player0 starts by moving RED piece to [3, 2] which is a BLUE grid"},{color:"BL",row:6,col:1,comment:"player1 has to move BLUE piece and he selects [6, 1] to minimizes the move choices of opponent and has a chance to win if BLUE piece can move again"},{color:"BR",row:2,col:0,comment:"player0 has to move BROWN piece because last round the opponent stoped on a BRWON grid"},{color:"GR",row:6,col:0,comment:"player1 moves GREEN piece to [6, 0] which is a threat to opponent as it could lead to a win"},{color:"PU",row:3,col:1,comment:"player0 moves PURPLE piece to [3, 1] which is a PURLE grid"},{color:"PU",row:3,col:5,comment:"player1 chooses to move PURPLE piece to [3, 5], which gives the opponent only 3 possible moves"},{color:"GR",row:4,col:4,comment:"player0 moves GREEN piece to [4, 4]"},{color:"OR",row:2,col:2,comment:"player1 can choose to move to a RED grid or a ORANGE grid, but he has to select ORANGE because player0 could move RED piece to win the game"}])}var m=[["OR","BL","PU","PI","YE","RE","GR","BR"],["RE","OR","PI","GR","BL","YE","BR","PU"],["GR","PI","OR","RE","PU","BR","YE","BL"],["PI","PU","BL","OR","BR","GR","RE","YE"],["YE","RE","GR","BR","OR","BL","PU","PI"],["BL","YE","BR","PU","RE","OR","PI","GR"],["PU","BR","YE","BL","GR","PI","OR","RE"],["BR","GR","RE","YE","PI","PU","BL","OR"]];this.noLegalMove=h,this.createComputerMove=d,this.createMove=e,this.isMoveOk=i,this.getExampleGame=l,this.getRiddles=k}),angular.module("myApp",["ngDraggable","ngTouch","ui.bootstrap"]).controller("Ctrl",function(a,b,c,d,e,f,g){function h(){var a=b.state.delta.row,c=b.state.delta.col,g=l[a][c],h=f.createComputerMove(b.state,g,b.turnIndex),i=b.pieces[b.turnIndex][g][0],j=b.pieces[b.turnIndex][g][1],m=h[3].set.value,n=m.row,o=m.col;b.uiBoard[i][j].ngstyle=k(n,o,i,j),d(function(){e.makeMove(h)},500)}function i(a){b.pieces=a.stateAfterMove.pieces,void 0===b.pieces&&(b.pieces=[{BR:[7,0],GR:[7,1],RE:[7,2],YE:[7,3],PI:[7,4],PU:[7,5],BL:[7,6],OR:[7,7]},{OR:[0,0],BL:[0,1],PU:[0,2],PI:[0,3],YE:[0,4],RE:[0,5],GR:[0,6],BR:[0,7]}]),b.state=a.stateAfterMove,b.uiBoard=[[],[],[],[],[],[],[],[]];var c,g,i;for(g=0;8>g;g+=1)for(i=0;8>i;i+=1){var k=l[g][i],m={isPlayer0:!1,isPlayer1:!1,playerIndex:-1,color:"",pieceColor:"",id:-1,isEmpty:!0,isDraggable:!1,ngstyle:{},row:-1,col:-1};switch(m.row=g,m.col=i,k){case"OR":m.color="FFA858";break;case"BL":m.color="39455A";break;case"PU":m.color="890E53";break;case"PI":m.color="AC768F";break;case"YE":m.color="EAC761";break;case"RE":m.color="F75E50";break;case"GR":m.color="84A586";break;case"BR":m.color="A26E59"}b.uiBoard[g][i]=m}var n=0;for(c in b.pieces[0])b.pieces[0].hasOwnProperty(c)&&(g=b.pieces[0][c][0],i=b.pieces[0][c][1],b.uiBoard[g][i].isEmpty=!1,b.uiBoard[g][i].isPlayer0=!0,b.uiBoard[g][i].playerIndex=0,b.uiBoard[g][i].pieceColor=c,b.uiBoard[g][i].id=n,n+=1);n=10;for(c in b.pieces[1])b.pieces[1].hasOwnProperty(c)&&(g=b.pieces[1][c][0],i=b.pieces[1][c][1],b.uiBoard[g][i].isEmpty=!1,b.uiBoard[g][i].isPlayer1=!0,b.uiBoard[g][i].playerIndex=1,b.uiBoard[g][i].pieceColor=c,b.uiBoard[g][i].id=n,n+=1);if(b.isYourTurn=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,b.turnIndex=a.turnIndexAfterMove,a.turnIndexAfterMove>=0&&j(),void 0!==b.state.delta&&a.turnIndexAfterMove>=0){g=b.state.delta.row,i=b.state.delta.col;var o=l[g][i];if(f.noLegalMove(b.state.board,b.pieces,b.turnIndex,o)){g=b.pieces[b.turnIndex][o][0],i=b.pieces[b.turnIndex][o][1];var p=[{setTurn:{turnIndex:1-b.turnIndex}},{set:{key:"pieces",value:b.pieces}},{set:{key:"board",value:b.state.board}},{set:{key:"delta",value:{color:o,row:g,col:i}}}];b.isYourTurn=!1,e.makeMove(p)}}b.isYourTurn&&""===a.playersInfo[a.yourPlayerIndex].playerId&&d(h,500)}function j(){if(void 0!==b.state.delta){var a=b.state.delta.row,c=b.state.delta.col,d=l[a][c],e=b.pieces[b.turnIndex][d][0],f=b.pieces[b.turnIndex][d][1];b.uiBoard[e][f].isDraggable=!0}else{var e,f;for(e=0===b.turnIndex?7:0,f=0;8>f;f+=1)b.uiBoard[e][f].isDraggable=!0}}function k(a,b,c,d){var e=30*(b-d)+"px",f=30*(a-c)+"px";return{top:f,left:e,position:"relative","-webkit-animation":"moveAnimation 0.5s",animation:"moveAnimation 0.5s"}}g.setWidthToHeight(1),b.getWidth=function(){var a=document.getElementById("gameArea");return.125*a.style.width},b.getHeight=function(){var a=document.getElementById("gameArea");return.125*a.style.height},b.getTop=function(a){var b=document.getElementById("gameArea");return.125*b.style.height*a},b.getLeft=function(a){var b=document.getElementById("gameArea");return.125*b.style.width*a};var l=[["OR","BL","PU","PI","YE","RE","GR","BR"],["RE","OR","PI","GR","BL","YE","BR","PU"],["GR","PI","OR","RE","PU","BR","YE","BL"],["PI","PU","BL","OR","BR","GR","RE","YE"],["YE","RE","GR","BR","OR","BL","PU","PI"],["BL","YE","BR","PU","RE","OR","PI","GR"],["PU","BR","YE","BL","GR","PI","OR","RE"],["BR","GR","RE","YE","PI","PU","BL","OR"]];i({stateAfterMove:{},turnIndexAfterMove:0,yourPlayerIndex:-2}),b.onDropComplete=function(a,c,d,g){switch(a){case 0:b.pieceColor="BR";break;case 1:b.pieceColor="GR";break;case 2:b.pieceColor="RE";break;case 3:b.pieceColor="YE";break;case 4:b.pieceColor="PI";break;case 5:b.pieceColor="PU";break;case 6:b.pieceColor="BL";break;case 7:b.pieceColor="OR";break;case 10:b.pieceColor="OR";break;case 11:b.pieceColor="BL";break;case 12:b.pieceColor="PU";break;case 13:b.pieceColor="PI";break;case 14:b.pieceColor="YE";break;case 15:b.pieceColor="RE";break;case 16:b.pieceColor="GR";break;case 17:b.pieceColor="BR"}try{var h=f.createMove(b.state,d,g,b.pieceColor,b.turnIndex);b.isYourTurn=!1,e.makeMove(h)}catch(i){return}},e.setGame({gameDeveloperEmail:"rshen1993@gmail.com",minNumberOfPlayers:2,maxNumberOfPlayers:2,exampleGame:f.getExampleGame(),riddles:f.getRiddles(),isMoveOk:f.isMoveOk,updateUI:i})}),angular.module("myApp").service("resizeGameAreaService",["$window","$log",function(a,b){function c(a){if(g=a,f=i.getElementById("gameArea"),!f)throw new Error("You forgot to add to your <body> this div: <div id='gameArea'>...</div>");h=null,e()}function d(a){return Math.round(100*a)/100}function e(){if(null!==g){var c=a.innerWidth,e=a.innerHeight,i=c,j=e;if(null===h||h.windowWidth!==i||h.windowHeight!==j){if(h={windowWidth:i,windowHeight:j},0===i||0===j)return b.info("Window width/height is 0 so hiding gameArea div."),void(f.style.display="none");f.style.display="block";var k=i/j;k>g?i=d(j*g):j=d(i/g),b.info("Window size is "+h.windowWidth+"x"+h.windowHeight+" so setting gameArea size to "+i+"x"+j+" because widthToHeight="+g);var l=.95;i*=l,j*=l,f.style.width=i+"px",f.style.height=j+"px",f.style.position="absolute",f.style.left=(c-i)/2+"px",f.style.top=(e-j)/2+"px",window.CIRCLE_WIDTH=1*i/8*.65,window.CIRCLE_HEIGHT=1*j/8*.65}}}var f,g=null,h=null,i=a.document;a.onresize=e,a.onorientationchange=e,i.addEventListener("onresize",e),i.addEventListener("orientationchange",e),setInterval(e,1e3),this.setWidthToHeight=c}]),angular.module("myApp").service("gameService",["$window","$log","stateService","messageService","$timeout",function(a,b,c,d,e){function f(a){return function(b){k=b,a(b)}}function g(a){if(b.info(["Making move:",a]),!k)throw new Error("Game called makeMove before getting updateUI or it called makeMove more than once for a single updateUI.");var f=k.turnIndexAfterMove>=0&&k.yourPlayerIndex===k.turnIndexAfterMove;if(!f)throw new Error("Game called makeMove when it wasn't your turn: yourPlayerIndex="+k.yourPlayerIndex+" turnIndexAfterMove="+k.turnIndexAfterMove);if(!a||!a.length)throw new Error("Game called makeMove with an empty move="+a);k=null,j?e(function(){c.makeMove(a)},100):d.sendMessage({makeMove:a})}function h(a){for(var b=[],c=0;c<a.maxNumberOfPlayers;c++)b.push({playerId:""+(c+42)});return b}function i(e){if(a.gameDeveloperEmail=e.gameDeveloperEmail,e.updateUI=f(e.updateUI),j)c.setGame(e);else{var g=e.isMoveOk,i=e.updateUI;d.addMessageListener(function(b){if(a.lastMessage=b,void 0!==b.isMoveOk){var c=g(b.isMoveOk);c!==!0&&(c={result:c,isMoveOk:b.isMoveOk}),d.sendMessage({isMoveOkResult:c})}else void 0!==b.updateUI&&(k=b.updateUI,i(b.updateUI))}),delete e.isMoveOk,delete e.updateUI,d.sendMessage({gameReady:e}),b.info("Passing a 'fake' updateUI message in order to show an empty board to a viewer (so you can NOT perform moves)"),i({move:[],turnIndexBeforeMove:0,turnIndexAfterMove:0,stateBeforeMove:null,stateAfterMove:{},yourPlayerIndex:-2,playersInfo:h(e),playMode:"passAndPlay",endMatchScores:null})}}var j=a.parent===a||"?test"===a.location.search,k=null;this.makeMove=g,this.setGame=i}]),angular.module("myApp").service("messageService",["$window","$log","$rootScope",function(a,b,c){var d=location.toString();this.sendMessage=function(c){b.info("Game sent message",c),c.gameUrl=d,a.parent.postMessage(c,"*")},this.addMessageListener=function(d){a.addEventListener("message",function(e){var f=e.source;f===a.parent&&c.$apply(function(){var a=e.data;b.info("Game got message",a),d(a)})},!1)}}]).factory("$exceptionHandler",["$window","$log",function(a,b){return function(c,d){b.error("Game had an exception:",c,d);var e=angular.toJson({exception:c,stackTrace:c.stack,cause:d,lastMessage:a.lastMessage},!0),f={emailJavaScriptError:{gameDeveloperEmail:a.gameDeveloperEmail,emailSubject:"Error in game "+a.location,emailBody:e}};throw a.parent.postMessage(f,"*"),c}}]),angular.module("myApp").service("stateService",["$window","$timeout","$log","$rootScope",function(a,b,c,d){function e(a){S=a,void 0!==F&&(g(),A())}function f(a){O=a}function g(){N=[];for(var a=r(F.minNumberOfPlayers,F.maxNumberOfPlayers+1),b=0;a>b;b++){var c="onlyAIs"===S||0!==b&&"playAgainstTheComputer"===S?"":""+(b+42);N.push({playerId:c})}}function h(){F||m("You must call setGame before any other method."),g(),G={},H=null,I={},J=null,K=[],L=0,Q=0,R=null,P=0}function i(){h(),x()}function j(a){var b=[];for(var c in a)a.hasOwnProperty(c)&&b.push(c);return b}function k(a){return angular.copy(a)}function l(a){return void 0===a||null===a}function m(){c.error("Throwing an error with these arguments=",arguments);var a=Array.prototype.join.call(arguments,", ");throw new Error(a)}function n(a,b){return l(a[b])&&m("You must have a field named '",b,"' in this object=",a),a[b]}function o(a,b){for(var c=[],d=0;d<b.length;d++){var e=b[d];c.push(l(e.set)||l(e.set.visibleToPlayerIndexes)||-1!==e.set.visibleToPlayerIndexes.indexOf(a)?e:{type:"Set",key:e.set.key,value:null,visibleToPlayerIndexes:e.set.visibleToPlayerIndexes})}return c}function p(a,b,c){if(null===b)return null;for(var d={},e=j(b),f=0;f<e.length;f++){var g=c[e[f]],h=null;(l(g)||g.indexOf(a)>-1)&&(h=b[e[f]]),d[e[f]]=h}return d}function q(a){for(var b=a.slice(0),c=[];b.length>=1;){var d=r(0,b.length),e=b.splice(d,1);c.push(e)}return c}function r(a,b){if(l(a)||l(b)||a>=b)throw new Error("In randomFromTo(from,to), you must have from<to, but from="+a+" to="+b);return Math.floor(Math.random()*(b-a)+a)}function s(a){var c,d,e;if(l(a.set))if(l(a.setTurn))if(l(a.setRandomInteger))if(l(a.setVisibility))if(l(a["delete"]))if(l(a.shuffle))if(l(a.endMatch))m("Illegal operation, it must contain either set, setRandomInteger, setVisibility, delete, shuffle, or endMatch: "+angular.toJson(a,!0));else{d=a.endMatch,M++;var f=d.endMatchScores;(l(f)||f.length!==N.length)&&m("Field scores in EndMatch operation must be an array of the same length as the number of players. operation="+angular.toJson(a,!0)),R=f,"onlyAIs"===S&&b(i,1e3)}else{d=a.shuffle;var g=d.keys;(l(g)||0===g.length)&&m("Field keys in Shuffle operation must be a non empty array. operation="+angular.toJson(a,!0));for(var h=q(g),j=k(G),o=k(I),p=0;p<h.length;p++){var s=g[p],t=h[p];G[t]=j[s],I[t]=o[s]}}else d=a["delete"],c=d.key,l(c)&&m("Field key in Delete operation must be non null. operation="+angular.toJson(a,!0)),delete G[c],delete I[c];else d=a.setVisibility,c=d.key,e=d.visibleToPlayerIndexes,l(c)&&m("Fields key in SetVisibility operation must be non null. operation="+angular.toJson(a,!0)),I[c]=e;else{d=a.setRandomInteger,c=d.key;var u=d.from,v=d.to;(l(c)||l(u)||l(v))&&m("Fields key, from, and to, in SetRandomInteger operation must be non null. operation="+angular.toJson(a,!0));var w=r(u,v);G[c]=w,I[c]=null}else d=a.setTurn,Q=n(d,"turnIndex"),M++;else{d=a.set,c=d.key,e=d.visibleToPlayerIndexes;var x=d.value;(l(c)||l(x))&&m("Fields key and value in Set operation must be non null. operation="+angular.toJson(a,!0)),G[c]=x,I[c]=e}}function t(){return"playWhite"===S?0:"playBlack"===S?1:"playViewer"===S?-2:"playAgainstTheComputer"===S||"onlyAIs"===S?Q:"passAndPlay"===S?Q:S}function u(){return{turnIndexBeforeMove:L,turnIndex:Q,endMatchScores:R,moveNumber:P,randomSeed:O,lastMove:K,lastState:H,currentState:G,lastVisibleTo:J,currentVisibleTo:I}}function v(a){void 0!==a.turnIndexBeforeMove&&void 0!==a.turnIndex&&void 0!==a.endMatchScores&&(L=a.turnIndexBeforeMove,Q=a.turnIndex,R=a.endMatchScores,P=a.moveNumber?a.moveNumber:0,O=a.randomSeed,K=a.lastMove,H=a.lastState,G=a.currentState,J=a.lastVisibleTo,I=a.currentVisibleTo)}function w(){return void 0!==a.Intercom?a.Intercom.getInstance():null}function x(){var b=u(),c=w();null!=c?(a.localStorage.setItem(a.location.toString(),angular.toJson(b)),c.emit("broadcastUpdateUi",b)):A()}function y(a){c.info("gotBroadcastUpdateUi:",a),v(a),A()}function z(){var a=o(Q,K),b=p(Q,H,J),c=p(Q,G,I);K.length>0&&F.isMoveOk({move:a,turnIndexBeforeMove:L,turnIndexAfterMove:Q,stateBeforeMove:b,stateAfterMove:c,numberOfPlayers:N.length})!==!0&&m("You declared a hacker for a legal move! move="+a),F.updateUI({move:a,turnIndexBeforeMove:L,turnIndexAfterMove:Q,stateBeforeMove:b,stateAfterMove:c,yourPlayerIndex:t(),playersInfo:N,playMode:S,moveNumber:P,randomSeed:O,endMatchScores:R})}function A(){0===d.settings.simulateServerDelayMilliseconds?z():b(z,d.settings.simulateServerDelayMilliseconds)}function B(a){F||m("You must call setGame before any other method."),-1===Q&&m("You cannot send a move after the game ended!"),t()!==Q&&m("Expected a move from turnIndex="+Q+" but got the move from index="+t()),H=k(G),J=k(I),L=Q,Q=-1,K=a,P++,O&&Math.seedrandom(O+P),M=0;for(var b=0;b<K.length;b++)s(K[b]);1!==M&&m("We must have either SetTurn or EndMatch, but not both: setTurnOrEndMatchCount="+M),Q>=-1&&Q<N.length||m("turnIndex must be between -1 and "+N.length+", but it was "+Q+"."),x()}function C(b){void 0!==F&&m("You can call setGame only once"),F=b,n(F,"minNumberOfPlayers"),n(F,"maxNumberOfPlayers"),n(F,"isMoveOk"),n(F,"updateUI"),h();var c=w();if(null!=c){c.on("broadcastUpdateUi",y);var d=a.localStorage.getItem(a.location.toString());l(d)||v(angular.fromJson(d))}A()}function D(){if(!R)return!1;for(var a=R[0],b=0;b<R.length;b++)if(a!==R[b])return!1;return!0}function E(){if(!R||D())return null;for(var a=0,b=0;b<R.length;b++)R[a]<R[b]&&(a=b);return a}var F,G,H,I,J,K,L,M,N,O,P,Q=0,R=null,S="?onlyAIs"===location.search?"onlyAIs":"?playAgainstTheComputer"===location.search?"playAgainstTheComputer":"passAndPlay";d.settings={},d.settings.simulateServerDelayMilliseconds=0,this.getTurnIndex=function(){return Q},this.getYourPlayerIndex=t,this.isYourTurn=function(){return-1!==Q&&Q===t()},this.getEndMatchScores=function(){return R},this.isTie=D,this.getWinnerIndex=E,this.isWinner=function(){return E()===t()},this.setGame=C,this.makeMove=B,this.startNewMatch=i,this.init=h,this.setPlayMode=e,this.setRandomSeed=f,this.getMatchState=u,this.setMatchState=v}]);
//# sourceMappingURL=everything.min.js.map